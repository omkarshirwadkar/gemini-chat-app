package com.ai.gemini_chat;

import java.util.Map;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.reactive.function.client.WebClient;

@Service
public class QnaService {
    @Value("${gemini.api.url}")
    private String geminiApiUrl;
    @Value("$gemini.api.key")
    private String geminiApiKey;

    private final WebClient webClient;

    public QnaService(WebClient.Builder webClientBuilder) {
        this.webClient = webClientBuilder.build();
    }
    public String getAnswer(String question) {
        // Construct the request payload
    	Map<String, Object> requestBody = Map.of(
            "contents", new Object[]{
                Map.of(
                    "parts", new Object[]{
                        Map.of("text", question)
                    }
                )
            }
        );
        // Make the API call
        String response = webClient.post()
            .uri(geminiApiUrl + geminiApiKey)
            .header("Content-Type", "application/json")
            .bodyValue(requestBody)
            .retrieve()
            .bodyToMono(String.class)
            .block();
        // Return the response
        return response;
    }
}
